{"ast":null,"code":"import { getScreenWidth } from \"./helper\";\nimport { BubbleSort } from \"../sortFunctions/BubbleSort\";\nimport { SelectionSort } from \"../sortFunctions/SelectionSort\";\nimport { InsertionSort } from \"../sortFunctions/InsertionSort\";\nimport { QuickSort } from \"../sortFunctions/QuickSort\";\nimport { HeapSort } from \"../sortFunctions/HeapSort.js\";\nimport { MergeSort } from \"../sortFunctions/MergeSort\"; // colors setting\n\nexport const comparisionColor = \"pink\";\nexport const swapColor = \"yellow\";\nexport const sortedColor = \"springgreen\";\nexport const pivotColor = \"sandybrown\"; // time setting\n\nexport let swapTime = 1000;\nexport let compareTime = 500; // init array\n\nexport let sortingArray = initArrayForScreenSize();\nexport const sortingAlgorithms = [{\n  component: BubbleSort,\n  title: \"Bubble\",\n  name: \"BubbleSort\"\n}, {\n  component: SelectionSort,\n  title: \"Selection\",\n  name: \"SelectionSort\"\n}, {\n  component: InsertionSort,\n  title: \"Insertion\",\n  name: \"InsertionSort\"\n}, {\n  component: HeapSort,\n  title: \"Heap\",\n  name: \"HeapSort\"\n}, {\n  component: MergeSort,\n  title: \"Merge\",\n  name: \"MergeSort\"\n}, {\n  component: QuickSort,\n  title: \"Quick\",\n  name: \"QuickSort\"\n}];\n\nfunction initArrayForScreenSize() {\n  const screenSize = getScreenWidth();\n  if (screenSize < 460) return [4, 3, 2, 1];else if (screenSize < 720) return [8, 7, 6, 5, 4, 3, 2, 1];\n  return [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1];\n}","map":{"version":3,"names":["getScreenWidth","BubbleSort","SelectionSort","InsertionSort","QuickSort","HeapSort","MergeSort","comparisionColor","swapColor","sortedColor","pivotColor","swapTime","compareTime","sortingArray","initArrayForScreenSize","sortingAlgorithms","component","title","name","screenSize"],"sources":["C:/Users/ACER/Desktop/sorting-visualizer-main/src/common/config.js"],"sourcesContent":["import { getScreenWidth } from \"./helper\";\nimport { BubbleSort } from \"../sortFunctions/BubbleSort\";\nimport { SelectionSort } from \"../sortFunctions/SelectionSort\";\nimport { InsertionSort } from \"../sortFunctions/InsertionSort\";\nimport { QuickSort } from \"../sortFunctions/QuickSort\";\nimport { HeapSort } from \"../sortFunctions/HeapSort.js\";\nimport { MergeSort } from \"../sortFunctions/MergeSort\";\n\n// colors setting\nexport const comparisionColor = \"pink\";\nexport const swapColor = \"yellow\";\nexport const sortedColor = \"springgreen\";\nexport const pivotColor = \"sandybrown\";\n\n// time setting\nexport let swapTime = 1000;\nexport let compareTime = 500;\n\n// init array\nexport let sortingArray = initArrayForScreenSize();\n\nexport const sortingAlgorithms = [\n  { component: BubbleSort, title: \"Bubble\", name: \"BubbleSort\" },\n  { component: SelectionSort, title: \"Selection\", name: \"SelectionSort\" },\n  { component: InsertionSort, title: \"Insertion\", name: \"InsertionSort\" },\n  { component: HeapSort, title: \"Heap\", name: \"HeapSort\" },\n  { component: MergeSort, title: \"Merge\", name: \"MergeSort\" },\n  { component: QuickSort, title: \"Quick\", name: \"QuickSort\" },\n];\n\nfunction initArrayForScreenSize() {\n  const screenSize = getScreenWidth();\n  if (screenSize < 460) return [4, 3, 2, 1];\n  else if (screenSize < 720) return [8, 7, 6, 5, 4, 3, 2, 1];\n  return [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1];\n}\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,SAAT,QAA0B,4BAA1B;AACA,SAASC,QAAT,QAAyB,8BAAzB;AACA,SAASC,SAAT,QAA0B,4BAA1B,C,CAEA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAzB;AACP,OAAO,MAAMC,SAAS,GAAG,QAAlB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,UAAU,GAAG,YAAnB,C,CAEP;;AACA,OAAO,IAAIC,QAAQ,GAAG,IAAf;AACP,OAAO,IAAIC,WAAW,GAAG,GAAlB,C,CAEP;;AACA,OAAO,IAAIC,YAAY,GAAGC,sBAAsB,EAAzC;AAEP,OAAO,MAAMC,iBAAiB,GAAG,CAC/B;EAAEC,SAAS,EAAEf,UAAb;EAAyBgB,KAAK,EAAE,QAAhC;EAA0CC,IAAI,EAAE;AAAhD,CAD+B,EAE/B;EAAEF,SAAS,EAAEd,aAAb;EAA4Be,KAAK,EAAE,WAAnC;EAAgDC,IAAI,EAAE;AAAtD,CAF+B,EAG/B;EAAEF,SAAS,EAAEb,aAAb;EAA4Bc,KAAK,EAAE,WAAnC;EAAgDC,IAAI,EAAE;AAAtD,CAH+B,EAI/B;EAAEF,SAAS,EAAEX,QAAb;EAAuBY,KAAK,EAAE,MAA9B;EAAsCC,IAAI,EAAE;AAA5C,CAJ+B,EAK/B;EAAEF,SAAS,EAAEV,SAAb;EAAwBW,KAAK,EAAE,OAA/B;EAAwCC,IAAI,EAAE;AAA9C,CAL+B,EAM/B;EAAEF,SAAS,EAAEZ,SAAb;EAAwBa,KAAK,EAAE,OAA/B;EAAwCC,IAAI,EAAE;AAA9C,CAN+B,CAA1B;;AASP,SAASJ,sBAAT,GAAkC;EAChC,MAAMK,UAAU,GAAGnB,cAAc,EAAjC;EACA,IAAImB,UAAU,GAAG,GAAjB,EAAsB,OAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAP,CAAtB,KACK,IAAIA,UAAU,GAAG,GAAjB,EAAsB,OAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAP;EAC3B,OAAO,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,CAAP;AACD"},"metadata":{},"sourceType":"module"}