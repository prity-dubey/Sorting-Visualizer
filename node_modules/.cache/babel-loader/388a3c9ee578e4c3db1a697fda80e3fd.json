{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\sorting-visualizer-main\\\\src\\\\components\\\\visualizer\\\\MergeContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { comparisionColor, swapColor, sortedColor } from \"../../common/config\";\nimport { ArrayHolder, ArrayItem, swapAnimation, moveAnimation } from \"../../common/styles\";\nimport { useControls } from \"../../common/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet swapTime = useControls.getState().swapTime;\nuseControls.subscribe(time => swapTime = time, state => state.swapTime);\nconst AnimatedItem = styled(ArrayItem)`\n  animation: ${props => swapAnimation(props.distance, swapColor)}\n    ${() => swapTime / 1000}s forwards;\n`;\n_c = AnimatedItem;\nconst MoveItem = styled(ArrayItem)`\n  animation: ${moveAnimation()} ${() => swapTime / 1000}s forwards;\n`;\n_c2 = MoveItem;\n\nconst generateItems = (setItems, source, destination) => {\n  setItems(items => {\n    const newItems = [...items];\n    const temp = newItems[source];\n\n    for (let i = source; i > destination; i--) {\n      newItems[i] = newItems[i - 1];\n    }\n\n    newItems[destination] = temp;\n    return newItems;\n  });\n};\n\nexport function MergeContainer(_ref) {\n  _s();\n\n  let {\n    array,\n    source,\n    destination,\n    hightlightedIndices,\n    sortedIndices\n  } = _ref;\n  const [items, setItems] = useState([...array]);\n  useEffect(() => {\n    if (source !== -1 && destination !== -1) {\n      generateItems(setItems, source, destination);\n    }\n  }, [source, destination]);\n  useEffect(() => {\n    setItems([...array]);\n  }, [array]);\n\n  function getBackgroundColor(i) {\n    if (sortedIndices.includes(i)) {\n      return sortedColor;\n    }\n\n    if (hightlightedIndices.includes(i)) {\n      return comparisionColor;\n    }\n\n    return \"\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ArrayHolder, {\n      children: items.map((value, i) => {\n        if (i === destination) {\n          return /*#__PURE__*/_jsxDEV(AnimatedItem, {\n            style: {\n              order: source + 1,\n              backgroundColor: getBackgroundColor(i)\n            },\n            distance: source - destination,\n            children: value\n          }, i + \":\" + value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this);\n        } else if (i > destination && i <= source) {\n          return /*#__PURE__*/_jsxDEV(MoveItem, {\n            style: {\n              order: i,\n              backgroundColor: getBackgroundColor(i),\n              transform: \"translate(50px)\"\n            },\n            children: value\n          }, i + \":\" + value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(ArrayItem, {\n            style: {\n              order: i,\n              backgroundColor: getBackgroundColor(i)\n            },\n            children: value\n          }, i + \":\" + value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(MergeContainer, \"7UeJ2DVPR22mlDt11gLURKXsumQ=\");\n\n_c3 = MergeContainer;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AnimatedItem\");\n$RefreshReg$(_c2, \"MoveItem\");\n$RefreshReg$(_c3, \"MergeContainer\");","map":{"version":3,"names":["React","useEffect","useState","styled","comparisionColor","swapColor","sortedColor","ArrayHolder","ArrayItem","swapAnimation","moveAnimation","useControls","swapTime","getState","subscribe","time","state","AnimatedItem","props","distance","MoveItem","generateItems","setItems","source","destination","items","newItems","temp","i","MergeContainer","array","hightlightedIndices","sortedIndices","getBackgroundColor","includes","map","value","order","backgroundColor","transform"],"sources":["C:/Users/ACER/Desktop/sorting-visualizer-main/src/components/visualizer/MergeContainer.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { comparisionColor, swapColor, sortedColor } from \"../../common/config\";\nimport {\n  ArrayHolder,\n  ArrayItem,\n  swapAnimation,\n  moveAnimation,\n} from \"../../common/styles\";\nimport { useControls } from \"../../common/store\";\n\nlet swapTime = useControls.getState().swapTime;\nuseControls.subscribe(\n  (time) => (swapTime = time),\n  (state) => state.swapTime\n);\n\nconst AnimatedItem = styled(ArrayItem)`\n  animation: ${(props) => swapAnimation(props.distance, swapColor)}\n    ${() => swapTime / 1000}s forwards;\n`;\n\nconst MoveItem = styled(ArrayItem)`\n  animation: ${moveAnimation()} ${() => swapTime / 1000}s forwards;\n`;\n\nconst generateItems = (setItems, source, destination) => {\n  setItems((items) => {\n    const newItems = [...items];\n\n    const temp = newItems[source];\n    for (let i = source; i > destination; i--) {\n      newItems[i] = newItems[i - 1];\n    }\n\n    newItems[destination] = temp;\n    return newItems;\n  });\n};\n\nexport function MergeContainer({\n  array,\n  source,\n  destination,\n  hightlightedIndices,\n  sortedIndices,\n}) {\n  const [items, setItems] = useState([...array]);\n\n  useEffect(() => {\n    if (source !== -1 && destination !== -1) {\n      generateItems(setItems, source, destination);\n    }\n  }, [source, destination]);\n\n  useEffect(() => {\n    setItems([...array]);\n  }, [array]);\n\n  function getBackgroundColor(i) {\n    if (sortedIndices.includes(i)) {\n      return sortedColor;\n    }\n\n    if (hightlightedIndices.includes(i)) {\n      return comparisionColor;\n    }\n\n    return \"\";\n  }\n\n  return (\n    <>\n      <ArrayHolder>\n        {items.map((value, i) => {\n          if (i === destination) {\n            return (\n              <AnimatedItem\n                key={i + \":\" + value}\n                style={{\n                  order: source + 1,\n                  backgroundColor: getBackgroundColor(i),\n                }}\n                distance={source - destination}\n              >\n                {value}\n              </AnimatedItem>\n            );\n          } else if (i > destination && i <= source) {\n            return (\n              <MoveItem\n                key={i + \":\" + value}\n                style={{\n                  order: i,\n                  backgroundColor: getBackgroundColor(i),\n                  transform: \"translate(50px)\",\n                }}\n              >\n                {value}\n              </MoveItem>\n            );\n          } else {\n            return (\n              <ArrayItem\n                key={i + \":\" + value}\n                style={{\n                  order: i,\n                  backgroundColor: getBackgroundColor(i),\n                }}\n              >\n                {value}\n              </ArrayItem>\n            );\n          }\n        })}\n      </ArrayHolder>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}