{"version":3,"sources":["common/helper.js","sortFunctions/BubbleSort.js","sortFunctions/SelectionSort.js","sortFunctions/InsertionSort.js","sortFunctions/QuickSort.js","sortFunctions/HeapSort.js","sortFunctions/MergeSort.js","common/config.js","common/store.js","components/NavBar.jsx","components/Footer.jsx","components/Controller.jsx","common/styles.jsx","components/visualizer/ArrayContainer.jsx","components/visualizer/MergeContainer.jsx","components/visualizer/InfoFooter.jsx","components/visualizer/Timer.jsx","components/visualizer/SortManager.jsx","components/AlgoDisplay.jsx","App.jsx","index.js"],"names":["delay","time","Promise","resolve","setTimeout","generateRandomNumberInRange","lowerLimit","upperLimit","Math","floor","random","array","swap","highlight","marksort","a","i","length","j","maxIndex","keyIndex","QuickSort","markSort","partition","low","high","pivot","maxHeap","right","max","highlightArray","left","arrLength","push","MergeSort","combine","merge","off1","off2","finalMerge","result","leftIndex","rightIndex","offSet","middle","slice","arr","comparisionColor","swapColor","sortedColor","sortingArray","screenSize","window","innerWidth","initArrayForScreenSize","sortingAlgorithms","component","title","name","useControls","create","devtools","set","progress","speed","compareTime","swapTime","doneCount","startSorting","pauseSorting","resetSorting","markSortngDone","state","useData","getState","algorithm","setSpeed","setSortingArray","setAlgorithm","idx","a11yProps","index","id","useStyles","makeStyles","theme","root","flexGrow","width","backgroundColor","palette","background","paper","NavBar","classes","shallow","className","style","display","justifyContent","alignItems","href","target","fontSize","AppBar","position","color","Tabs","value","onChange","event","indicatorColor","textColor","variant","scrollButtons","map","Tab","label","key","FooterDiv","styled","div","Footer","ControlBar","ArrayBar","ExecutionBar","Controller","useState","isPausing","setIsPausing","arrayInput","setArrayInput","startElement","onClick","pauseElement","resetElement","disabledPauseElement","Button","randomArray","Array","from","getRandomArray","TextField","arrayString","replaceAll","string","split","filter","v","arrayDataChangeHandler","size","margin","Slider","defaultValue","valueLabelDisplay","step","marks","min","flexBasis","marginLeft","columnGap","getProgressButton","ArrayHolder","ArrayItem","subscribe","Source","props","distance","keyframes","Destination","ArrayContainer","source","destination","highlightIndices","sortedIndices","getBackgroundColor","includes","order","AnimatedItem","MoveItem","MergeContainer","hightlightedIndices","items","setItems","useEffect","newItems","temp","generateItems","transform","InfoFlex","InfoFooter","swapCount","comparisionCount","children","Timer","isAlgoExecutionOver","minutes","setMinutes","seconds","setSeconds","milliSeconds","setMilliSeconds","intervalId","setInterval","ml","clearInterval","toString","padStart","cTime","sTime","Container","Card","AlgoHeaderBar","TimerDiv","SortManager","React","memo","sortFunction","sortingAlgorithmName","swapIndices","setSwapIndices","setHightlightedIndices","algoArray","useRef","isComponentUnMounted","sortProgressIterator","reset","current","completion","done","next","tmp","indices","p","runAlgo","mergeContainer","arrayContainer","FlexWrap","flexCenter","TabPanel","other","role","hidden","maxWidth","AlgoDisplay","algoInfo","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAyBO,SAASA,EAAMC,GACpB,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,MAGtD,SAASI,IAA+D,IAAnCC,EAAkC,uDAArB,EAAGC,EAAkB,uDAAL,IAChE,OAAOD,EAAaE,KAAKC,MAAMD,KAAKE,SAAWH,G,+EC9B1C,WAA2BI,EAAOC,EAAMC,EAAWC,GAAnD,iBAAAC,EAAA,sDACIC,EAAI,EADR,YACWA,EAAIL,EAAMM,QADrB,iBAEMC,EAAI,EAFV,YAEaA,EAAIP,EAAMM,OAASD,EAAI,GAFpC,6CAGWH,EAAU,CAACK,EAAGA,EAAI,KAH7B,OAGD,OAHC,SAGD,OAHC,YAKGP,EAAMO,GAAKP,EAAMO,EAAI,IALxB,8CAMaN,EAAKM,EAAGA,EAAI,IANzB,QAMC,OAND,UAMC,OAND,QAEuCA,IAFvC,uBAWH,OADAJ,EAASI,QAVN,mBAC6BF,IAD7B,4D,kECAA,WAA8BL,EAAOC,EAAMC,EAAWC,GAAtD,mBAAAC,EAAA,sDACIC,EAAI,EADR,YACWA,EAAIL,EAAMM,QADrB,iBAECE,EAAW,EACND,EAAI,EAHV,YAGaA,EAAIP,EAAMM,OAASD,GAHhC,6CAIWH,EAAU,CAACM,EAAUD,KAJhC,OAID,OAJC,SAID,OAJC,OAMGP,EAAMQ,GAAYR,EAAMO,KAC1BC,EAAWD,GAPZ,QAGmCA,IAHnC,0BAYCC,KADJD,GAAQ,IACcP,EAAMQ,KAAcR,EAAMO,GAZ7C,8CAaWN,EAAKO,EAAUD,IAb1B,QAaD,OAbC,UAaD,OAbC,QAiBH,OADAJ,EAASI,QAhBN,mBAC6BF,IAD7B,4D,kECAA,WAA8BL,EAAOC,EAAMC,EAAWC,GAAtD,mBAAAC,EAAA,sDACIC,EAAI,EADR,YACWA,EAAIL,EAAMM,QADrB,iBAECG,EAAWJ,EACNE,EAAIF,EAAI,EAHd,YAGiBE,GAAK,GAHtB,6CAIWL,EAAU,CAACO,EAAUF,KAJhC,OAID,OAJC,SAID,OAJC,YAMGP,EAAMO,GAAKP,EAAMS,IANpB,8CAOaR,EAAKM,EAAGE,IAPrB,QAOC,OAPD,UAOC,OAPD,QAQCA,EAAWF,EARZ,wBAUC,YAVD,uDAGyBA,IAHzB,uBAgBH,OADAJ,EAASE,QAfN,mBAC6BA,IAD7B,4D,0CCAA,SAAgBK,EAAvB,wC,4CAAO,WACLV,EACAC,EACAC,EACAS,GAJK,UAeWC,EAfX,uBAAAR,EAAA,6FAAAA,EAAA,MAeL,WAA0BJ,EAAOa,EAAKC,GAAtC,mBAAAV,EAAA,sDACMW,EAAQF,EACRR,EAAIQ,EACJN,EAAIO,EAAO,EAHjB,YAKST,EAAIE,GALb,+BAOaA,EAAIM,GAPjB,6CAQkBX,EAAU,CAACG,EAAGE,GAAIQ,IARpC,OAQM,OARN,SAQM,OARN,YASUf,EAAMO,GAAKP,EAAMe,IAT3B,iFAcWV,GAAKS,GAAQT,EAAIE,GAd5B,8CAekBL,EAAU,CAACG,GAAIU,IAfjC,QAeM,OAfN,UAeM,OAfN,aAgBUf,IAAQK,GAAKL,EAAMe,IAhB7B,kFAqBQV,EAAIE,GArBZ,8CAsBkBN,EAAKI,EAAGE,IAtB1B,QAsBM,OAtBN,UAsBM,OAtBN,kCA0BMQ,IAAUR,EA1BhB,8CA2BgBN,EAAKc,EAAOR,IA3B5B,QA2BI,OA3BJ,UA2BI,OA3BJ,QA+BE,OADAI,EAASJ,QA9BX,4CAgCSA,GAhCT,4CAfK,yBAeWK,EAfX,gDAKLC,EALK,+BAKC,EACNC,EANK,+BAMEd,EAAMM,OAAS,IAGlBO,GAAOC,GATN,+DAUsBF,EAAUZ,EAAOa,EAAKC,IAV5C,OAUS,OAVT,yCAUS,6CAVT,eAUCC,EAVD,6CAWUL,EAAUV,EAAOC,EAAMC,EAAWS,EAAUE,EAAKE,EAAQ,IAXnE,QAWH,OAXG,0CAWH,+CAXG,yDAYUL,EAAUV,EAAOC,EAAMC,EAAWS,EAAUI,EAAQ,EAAGD,IAZjE,QAYH,OAZG,8CAYH,iDAZG,4C,oECAA,WAAyBd,EAAOC,EAAMC,EAAWS,GAAjD,UAeWK,EAfX,WAAAZ,EAAA,0FAAAA,EAAA,MAeL,WAAwBC,GAAxB,qBAAAD,EAAA,6DAEQa,EAAQ,EAAIZ,EAAI,EAClBa,EAAMb,EAEJc,EAAiB,IAJjBC,EAAO,EAAIf,EAAI,GAKXgB,GACRF,EAAeG,KAAKF,GACnBH,EAAQI,GACTF,EAAeG,KAAKL,GATxB,qBAUcf,EAAUiB,EAAgBd,IAVxC,OAUE,OAVF,UAUE,OAVF,WAYKe,EAAOC,GACJrB,EAAMoB,GAAQpB,EAAMkB,KACtBA,EAAME,GAIPH,EAAQI,GACLrB,EAAMiB,GAASjB,EAAMkB,KACvBA,EAAMD,GAINC,IAAQb,EAxBd,8CAyBgBJ,EAAKI,EAAGa,IAzBxB,QAyBI,OAzBJ,UAyBI,OAzBJ,uDA0BiBF,EAAQE,IA1BzB,QA0BI,OA1BJ,yCA0BI,6CA1BJ,4CAfK,yBAeWF,EAfX,4CACDK,EAAYrB,EAAMM,OACbD,EAAIR,KAAKC,MAAMuB,EAAY,GAAK,EAFpC,YAEuChB,GAAK,GAF5C,+DAGUW,EAAQX,IAHlB,OAGH,OAHG,yCAGH,6CAHG,QAE+CA,IAF/C,uBAMIA,EAAIL,EAAMM,OAAS,EANvB,aAM0BD,EAAI,GAN9B,wBAOHgB,IACAV,EAASU,GARN,sBASSpB,EAAK,EAAGI,IATjB,QASH,OATG,UASH,OATG,uDAUUW,EAAQ,IAVlB,QAUH,OAVG,0CAUH,+CAVG,QAMiCX,IANjC,wBAaLM,EAAS,GAbJ,4C,wBCAA,SAAgBY,EAAvB,wC,4CAAO,WACLvB,EACAwB,EACAtB,EACAS,GAJK,gBA4BWc,EA5BX,uBAAArB,EAAA,6FAAAA,EAAA,MA4BL,WAAsBgB,EAAMH,EAAOS,EAAMC,GAAzC,mCAAAvB,EAAA,sDAA+CwB,EAA/C,gCAAmEjB,EAAnE,uBACMkB,EAAS,GACTC,EAAY,EACZC,EAAa,EAHnB,YAKSD,EAAYV,EAAKd,QAAUyB,EAAad,EAAMX,QALvD,sBAMQc,EAAKU,IAAcb,EAAMc,IANjC,6CAOkB7B,EAAU,CAACwB,EAAOI,EAAYC,EAAYJ,EAAOI,KAPnE,OAOM,OAPN,UAOM,OAPN,qCAQkBP,EACVE,EAAOI,EAAYC,EACnBL,EAAOG,EAAOvB,SAVtB,QAQM,OARN,UAQM,OARN,YAYSsB,EAZT,8CAaoBjB,EAASe,EAAOG,EAAOvB,SAb3C,QAaQ,OAbR,UAaQ,OAbR,QAcMuB,EAAOP,KAAKF,EAAKU,IACjBA,IAfN,qDAiBkB5B,EAAU,CAACwB,EAAOI,EAAYC,EAAYJ,EAAOI,KAjBnE,QAiBM,OAjBN,UAiBM,OAjBN,qCAkBkBP,EAAQG,EAAOI,EAAYL,EAAOG,EAAOvB,SAlB3D,QAkBM,OAlBN,UAkBM,OAlBN,YAmBSsB,EAnBT,8CAoBoBjB,EAASe,EAAOG,EAAOvB,SApB3C,QAoBQ,OApBR,UAoBQ,OApBR,QAqBMuB,EAAOP,KAAKL,EAAMc,IAClBA,IAtBN,oCA0BSD,EAAYV,EAAKd,QA1B1B,8CA2BgBJ,EAAU,CAACwB,EAAOI,EAAYC,KA3B9C,QA2BI,OA3BJ,UA2BI,OA3BJ,YA4BOH,EA5BP,8CA6BkBjB,EAASe,EAAOI,EAAYC,IA7B9C,QA6BM,OA7BN,UA6BM,OA7BN,QA8BIF,EAAOP,KAAKF,EAAKU,IACjBA,IA/BJ,6BAkCSC,EAAad,EAAMX,QAlC5B,8CAmCgBJ,EAAU,CAACwB,EAAOI,EAAYC,KAnC9C,QAmCI,OAnCJ,UAmCI,OAnCJ,YAoCOH,EApCP,8CAqCkBjB,EAASe,EAAOI,EAAYC,IArC9C,QAqCM,OArCN,UAqCM,OArCN,QAsCIF,EAAOP,KAAKL,EAAMc,IAClBA,IAvCJ,iDA0CSF,GA1CT,4CA5BK,yBA4BWJ,EA5BX,kDAKLO,EALK,+BAKI,EACTJ,IANK,iCAQgB,IAAjB5B,EAAMM,OARL,uBASAsB,GACDjB,EAAS,GAVR,kBAWIX,GAXJ,cAcCiC,EAASpC,KAAKC,MAAME,EAAMM,OAAS,GACnCc,EAAOpB,EAAMkC,MAAM,EAAGD,GACtBhB,EAAQjB,EAAMkC,MAAMD,GAhBrB,gCAkBoBR,EAlBpB,wCAmBUF,EAAUH,EAAMI,EAAStB,EAAWS,EAAUqB,GAAQ,IAnBhE,QAmBH,OAnBG,yCAmBH,6CAnBG,oEAoBUT,EAAUN,EAAOO,EAAStB,EAAWS,EAAUqB,EAASC,GAAQ,IApB1E,QAoBH,OApBG,8CAoBH,iDApBG,iCAqBHD,EArBG,MAsBHA,EAASC,EAtBN,MAuBHL,EAvBG,MAwBHjB,EAxBG,sFAkBO,OAlBP,6CAkBO,gDAlBP,eAkBCwB,EAlBD,wBA0BEA,GA1BF,4C,wBCSA,IAAMC,EAAmB,OACnBC,EAAY,SACZC,EAAc,cAQhBC,EAWX,WACE,IAAMC,EPTCC,OAAOC,WOUd,GAAIF,EAAa,IAAK,MAAO,CAAC,EAAG,EAAG,EAAG,GAClC,GAAIA,EAAa,IAAK,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxD,MAAO,CAAC,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAfpBG,GAEbC,EAAoB,CAC/B,CAAEC,UNtBG,SAAP,yCMsB2BC,MAAO,SAAUC,KAAM,cAChD,CAAEF,ULvBG,SAAP,yCKuB8BC,MAAO,YAAaC,KAAM,iBACtD,CAAEF,UJxBG,SAAP,yCIwB8BC,MAAO,YAAaC,KAAM,iBACtD,CAAEF,UFzBG,SAAP,yCEyByBC,MAAO,OAAQC,KAAM,YAC5C,CAAEF,UAAWtB,EAAWuB,MAAO,QAASC,KAAM,aAC9C,CAAEF,UAAWnC,EAAWoC,MAAO,QAASC,KAAM,c,oBClBnCC,EAAcC,YACzBC,oBAAS,SAACC,GAAD,MAAU,CACjBC,SAAU,QACVC,MAAO,EACPC,YDGqB,ICFrBC,SDCkB,ICAlBC,UAAW,EAEXC,aAAc,kBAAMN,EAAI,CAAEC,SAAU,WACpCM,aAAc,kBAAMP,EAAI,CAAEC,SAAU,WACpCO,aAAc,kBAAMR,EAAI,CAAEC,SAAU,QAASI,UAAW,KACxDI,eAAgB,kBACdT,GAAI,SAACU,GACH,OAAIC,EAAQC,WAAWC,YAAcpB,EAAkBtC,OACjDuD,EAAML,YAAcZ,EAAkBtC,OAAS,EAC1C,CAAEkD,UAAW,EAAGJ,SAAU,QACvB,CAAEI,UAAWK,EAAML,UAAY,GAC/B,CAAEJ,SAAU,YAE9Ba,SAAU,SAACZ,GAAD,OACRF,GAAI,WACF,MAAO,CAAEI,SAAU,IAAOF,EAAOC,YAAa,KAAOD,EAAOA,kBAKvDS,EAAUb,YACrBC,oBAAS,SAACC,GAAD,MAAU,CACjBa,UAAW,EACXzB,aAAcA,EAEd2B,gBAAiB,SAAClE,GAAD,OAAWmD,EAAI,CAAEZ,aAAcvC,KAChDmE,aAAc,SAACC,GAAD,OAASjB,EAAI,CAAEa,UAAWI,U,gCC/B5C,SAASC,EAAUC,GACjB,MAAO,CACLC,GAAG,uBAAD,OAAyBD,GAC3B,gBAAgB,4BAAhB,OAA6CA,IAIjD,I,EAAME,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVC,MAAO,OACPC,gBAAiBJ,EAAMK,QAAQC,WAAWC,WAIvC,SAASC,IACd,IAAMC,EAAUX,IAEhB,EAAkCV,GAChC,SAACD,GAAD,MAAW,CAACA,EAAMG,UAAWH,EAAMM,gBACnCiB,KAFF,mBAAOpB,EAAP,KAAkBG,EAAlB,KAKA,OACE,sBAAKkB,UAAWF,EAAQR,KAAxB,UACE,sBACEW,MAAO,CACLC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,UAJhB,UAOE,mFACA,mBAAGC,KAAK,wDAAwDC,OAAO,SAAvE,SAAgF,cAAC,IAAD,CAAcL,MAAO,CAAEM,SAAU,iBAEnH,cAACC,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,UAAhC,SACE,eAACC,EAAA,EAAD,CACEC,MAAOjC,EACPkC,SAAU,SAACC,EAAO5B,GAAR,OAAeJ,EAAaI,IACtC6B,eAAe,UACfC,UAAU,UACVC,QAAQ,aACRC,cAAc,OACd,aAAW,+BAPb,UASG3D,EAAkB4D,KAAI,SAACxC,GAAD,OACrB,wBAACyC,EAAA,EAAD,yBACEC,MAAO1C,EAAUlB,OACbuB,EAAU,IAFhB,IAGEsC,IAAK3C,EAAUlB,YAGnB,cAAC2D,EAAA,EAAD,aAAKC,MAAM,OAAUrC,EAAU,aC3DzC,IAAMuC,EAAYC,IAAOC,IAAV,2JASR,SAASC,IACd,OACE,eAACH,EAAD,qCACsB,mBAAGlB,KAAK,yCAAR,iC,kECKpBsB,GAAaH,IAAOC,IAAV,iIAQVG,GAAWJ,IAAOC,IAAV,gIAQRI,GAAeL,IAAOC,IAAV,2GAOX,SAASK,KAEd,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEA,EAA0BtE,GACxB,SAACa,GAAD,MAAW,CAACA,EAAMT,SAAUS,EAAMR,SAClC+B,KAFF,mBAAOhC,EAAP,KAAiBC,EAAjB,KAKA,EAAwCS,GACtC,SAACD,GAAD,MAAW,CAACA,EAAMtB,aAAcsB,EAAMK,mBACtCkB,KAFF,mBAAO7C,EAAP,KAAqB2B,EAArB,KAKA,EAA6DlB,GAC3D,SAACa,GAAD,MAAW,CACTA,EAAMJ,aACNI,EAAMH,aACNG,EAAMF,aACNE,EAAMI,YAERmB,KAPF,mBAAO3B,EAAP,KAAqBC,EAArB,KAAmCC,EAAnC,KAAiDM,EAAjD,KAUA,EAAoCmD,mBAAS7E,GAA7C,mBAAOgF,EAAP,KAAmBC,EAAnB,KAEMC,EAAe,cAAC,KAAD,CAAeC,QAASjE,IACvCkE,EAAe,cAAC,KAAD,CAASD,QA3BH,6CA4BrBE,EAAe,cAAC,KAAD,CAAiBF,QAAS/D,IACzCkE,EAAuB,cAAC,KAAD,CAASvC,MAAO,CAAES,MAAO,aA7B3B,4CA+B3B,sBAAA3F,EAAA,6DACEsD,IACA4D,GAAa,GAFf,SAGQjI,EAAM2D,EAAYe,WAAWR,UAHrC,OAIE+D,GAAa,GAJf,4CA/B2B,sBAsE3B,OACE,eAACN,GAAD,WACE,eAACC,GAAD,WACE,cAACa,GAAA,EAAD,CACExB,QAAQ,YACRP,MAAM,UACN2B,QA7BR,WACE,IAAMK,EX1EH,WAAsE,IAA9CzH,EAA6C,uDAApCZ,EAA4B,EAAG,IACrE,OAAOsI,MAAMC,KAAK,IAAID,MAAM1H,IAAS,kBAAMZ,OWyErBwI,GACpBV,EAAcO,GACd7D,EAAgB6D,GAChBpE,KAsBI,sBAQA,cAACwE,GAAA,EAAD,CACE5D,GAAG,iBACHmC,MAAM,QACNJ,QAAQ,WACRJ,SAAU,SAACC,GAAD,OA/ClB,SAAgCF,GAC9B,IAAMmC,EAAwCnC,EXjFhCoC,WAAW,MAAO,IAClBA,WAAW,SAAU,IACrBA,WAAW,QAAS,KACpBA,WAAW,OAAQ,KACnBA,WAAW,MAAO,KAClBA,WAAW,aAAc,IW6EvCb,EAAcY,GAEd,IAAMpI,GX3EgCsI,EW2EEF,EX1EnCE,EACJC,MAAM,KACNC,QAAO,SAACC,GAAD,MAAa,KAANA,KACdjC,KAAI,SAACiC,GAAD,OAAQA,MAJV,IAAmCH,EW4EtCpE,EAAgBlE,GAChB2D,IAyC2B+E,CAAuBvC,EAAMR,OAAOM,QACzDA,MAAOsB,EACPoB,KAAK,QACL9D,MAAM,QACNS,MAAO,CAAEV,SAAU,EAAGgE,OAAQ,eAGlC,eAAC1B,GAAD,WACE,cAAC2B,GAAA,EAAD,CAEEC,aAAczF,EACd6C,SAAU,SAACC,EAAOF,GAAR,OAAkBhC,EAASgC,IACrC,kBAAgB,kBAChB8C,kBAAkB,OAClBC,KAAM,EACNC,OAAK,EACLC,IAAK,EACLhI,IAAK,GACLoE,MAAO,CAAEV,SAAU,EAAGuE,UAAW,SAVnC,iBACiB9F,IAYjB,sBAAKiC,MAAO,CAAEC,QAAS,OAAQ6D,WAAY,OAAQC,UAAW,OAA9D,UApDN,WACE,GAAGhC,EACD,OAAOQ,EAET,OAAQzE,GACN,IAAK,QAIL,IAAK,QACH,OAAOqE,EAHT,IAAK,QACH,OAAOE,EAGT,IAAK,OACH,OAAOE,GAyCJyB,GACA1B,W,6CCrJE2B,GAAc1C,IAAOC,IAAV,+HAQX0C,GAAY3C,IAAOC,IAAV,4PCAlBvD,GAAWP,EAAYe,WAAWR,SACtCP,EAAYyG,WACV,SAACnK,GAAD,OAAWiE,GAAWjE,KACtB,SAACuE,GAAD,OAAWA,EAAMN,YAUnB,I,MAAMmG,GAAS7C,YAAO2C,GAAP3C,CAAH,oEACG,SAAC8C,GAAD,ODgCsBC,EChCUD,EAAMC,SDgCNvH,EChCgBA,EDgCFwH,YAAxB,KAAD,sdAEZxH,EAIAA,EAIAA,EAGe,GAAXuH,EACJvH,EAGe,GAAXuH,EACJvH,EAGe,GAAXuH,GArBQ,IAACA,EAAUvH,KC/BzC,kBAAMkB,GAAW,OAGjBuG,GAAcjD,YAAO2C,GAAP3C,CAAH,oEACF,SAAC8C,GAAD,ODqDiBC,ECrDUD,EAAMC,SDqDNvH,ECrDgBA,EDqDFwH,YAAxB,KAAD,qdAEPxH,EAIAA,EAIAA,EAGc,GAAXuH,EACHvH,EAGc,GAAXuH,EACHvH,EAGc,GAAXuH,GArBI,IAACA,EAAUvH,KCpDpC,kBAAMkB,GAAW,OAGhB,SAASwG,GAAT,GAOH,IANF/J,EAMC,EANDA,MACAgK,EAKC,EALDA,OACAC,EAIC,EAJDA,YAIC,IAHDlJ,aAGC,OAHQ,EAGR,EAFDmJ,EAEC,EAFDA,iBACAC,EACC,EADDA,cAGA,SAASC,EAAmB/J,GAC1B,OAAIA,IAAMU,EN/BY,aMmClBmJ,EAAiBG,SAAShK,GACrB+B,EAGL+H,EAAcE,SAAShK,GAClBiC,EAEF,GAGT,OACE,cAACiH,GAAD,UACGvJ,EAAMwG,KAAI,SAACP,EAAO5F,GACjB,OAAIA,IAAM2J,EAEN,cAACN,GAAD,CAEEE,SAAUK,EAAcD,EACxB1E,MAAO,CACLgF,MAAOL,EACPnF,gBAAiBsF,EAAmB/J,IALxC,SAQG4F,GAPI5F,EAAI,IAAM2J,EAAS,IAAMC,EAAc,IAAMhE,GAWpD5F,IAAM4J,EAEN,cAACH,GAAD,CAEEF,SAAUK,EAAcD,EACxB1E,MAAO,CACLgF,MAAON,EACPlF,gBAAiBsF,EAAmB/J,IALxC,SAQG4F,GAPI5F,EAAI,IAAM4J,EAAc,IAAMD,EAAS,IAAM/D,GAYtD,cAACuD,GAAD,CAEElE,MAAO,CACLgF,MAAOjK,EACPyE,gBAAiBsF,EAAmB/J,IAJxC,SAOG4F,GANI5F,EAAI,IAAM4J,EAAc,IAAMD,EAAS,IAAM/D,QC/E9D,IAAI1C,GAAWP,EAAYe,WAAWR,SACtCP,EAAYyG,WACV,SAACnK,GAAD,OAAWiE,GAAWjE,KACtB,SAACuE,GAAD,OAAWA,EAAMN,YAGnB,I,GAAMgH,GAAe1D,YAAO2C,GAAP3C,CAAH,oEACH,SAAC8C,GAAD,OFIeC,EEJUD,EAAMC,SFINvH,EEJgBA,EFIFwH,YAAxB,QAAD,wbAELxH,EAIAA,EAIAA,EAGe,GAAXuH,EACJvH,EAGe,GAAXuH,EACJvH,EAGe,GAAXuH,GArBC,IAACA,EAAUvH,KEHlC,kBAAMkB,GAAW,OAGjBiH,GAAW3D,YAAO2C,GAAP3C,CAAH,8DFyBqBgD,YAAL,KAAD,+HExBK,kBAAMtG,GAAW,OAiB5C,SAASkH,GAAT,GAMH,IALFzK,EAKC,EALDA,MACAgK,EAIC,EAJDA,OACAC,EAGC,EAHDA,YACAS,EAEC,EAFDA,oBACAP,EACC,EADDA,cAEA,EAA0B/C,mBAAS,aAAIpH,IAAvC,mBAAO2K,EAAP,KAAcC,EAAd,KAYA,SAASR,EAAmB/J,GAC1B,OAAI8J,EAAcE,SAAShK,GAClBiC,EAGLoI,EAAoBL,SAAShK,GACxB+B,EAGF,GAGT,OAtBAyI,qBAAU,YACQ,IAAZb,IAAkC,IAAjBC,GAxBH,SAACW,EAAUZ,EAAQC,GACvCW,GAAS,SAACD,GAIR,IAHA,IAAMG,EAAQ,aAAOH,GAEfI,EAAOD,EAASd,GACb3J,EAAI2J,EAAQ3J,EAAI4J,EAAa5J,IACpCyK,EAASzK,GAAKyK,EAASzK,EAAI,GAI7B,OADAyK,EAASb,GAAec,EACjBD,KAeLE,CAAcJ,EAAUZ,EAAQC,KAEjC,CAACD,EAAQC,IAEZY,qBAAU,WACRD,EAAS,aAAI5K,MACZ,CAACA,IAeF,mCACE,cAACuJ,GAAD,UACGoB,EAAMnE,KAAI,SAACP,EAAO5F,GACjB,OAAIA,IAAM4J,EAEN,cAACM,GAAD,CAEEjF,MAAO,CACLgF,MAAON,EAAS,EAChBlF,gBAAiBsF,EAAmB/J,IAEtCuJ,SAAUI,EAASC,EANrB,SAQGhE,GAPI5F,EAAI,IAAM4F,GAUV5F,EAAI4J,GAAe5J,GAAK2J,EAE/B,cAACQ,GAAD,CAEElF,MAAO,CACLgF,MAAOjK,EACPyE,gBAAiBsF,EAAmB/J,GACpC4K,UAAW,mBALf,SAQGhF,GAPI5F,EAAI,IAAM4F,GAYjB,cAACuD,GAAD,CAEElE,MAAO,CACLgF,MAAOjK,EACPyE,gBAAiBsF,EAAmB/J,IAJxC,SAOG4F,GANI5F,EAAI,IAAM4F,UCrG/B,IAAMiF,GAAWrE,IAAOC,IAAV,mFAKP,SAASqE,GAAT,GAAgE,IAA1CC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,iBAA8B,EAAZC,SACxD,OACE,eAACJ,GAAD,WACE,0CAAY,iCAASE,OACrB,iDAAmB,iCAASC,UCT3B,SAASE,GAAT,GAAyC,IAAxBC,EAAuB,EAAvBA,oBACtB,EAA8BpE,mBAAS,GAAvC,mBAAOqE,EAAP,KAAgBC,EAAhB,KACA,EAA8BtE,mBAAS,GAAvC,mBAAOuE,EAAP,KAAgBC,EAAhB,KACA,EAAwCxE,mBAAS,GAAjD,mBAAOyE,EAAP,KAAqBC,EAArB,KAEM1I,EAAWJ,GAAY,SAACa,GAAD,OAAWA,EAAMT,YA8B9C,OAtBAyH,qBAAU,WACR,IAAIW,EAAJ,CACA,GAAiB,UAAbpI,EACF,IAAI2I,EAAaC,aAAY,kBAAMF,GAAgB,SAACG,GAAD,OAAQA,EAAK,OAAI,SAChD,UAAb7I,IATT0I,EAAgB,GAChBF,EAAW,GACXF,EAAW,IAQX,OAAO,kBAAMQ,cAAcH,OAC1B,CAAC3I,EAAUoI,IAEdX,qBAAU,WACa,KAAjBgB,IACFD,GAAW,SAACD,GAAD,OAAaA,EAAU,KAClCG,EAAgB,MAEjB,CAACD,IAEJhB,qBAAU,WACQ,KAAZc,IACFD,GAAW,SAACD,GAAD,OAAaA,EAAU,KAClCG,EAAW,MAEZ,CAACD,IAEE,GAAN,OAAUF,EAAQU,WAAWC,SAAS,EAAG,GAAzC,YAA+CT,EAC5CQ,WACAC,SAAS,EAAG,GAFf,YAEqBP,EAFrB,M,uBC3BEvI,GAAcN,EAAYe,WAAWT,YACrCC,GAAWP,EAAYe,WAAWR,SAEtCP,EAAYyG,WACV,YAAqB,IAAD,mBAAlB4C,EAAkB,KAAXC,EAAW,KAClBhJ,GAAc+I,EACd9I,GAAW+I,KAEb,SAACzI,GAAD,MAAW,CAACA,EAAMP,YAAaO,EAAMN,YACrC6B,KAGF,I,MAAMmH,GAAY1F,YAAO2F,KAAP3F,CAAH,0FAKT4F,GAAgB5F,IAAOC,IAAV,gIAOb4F,GAAW7F,IAAOC,IAAV,sHAOD6F,GAAcC,IAAMC,MAAK,YAIlC,IAHF7M,EAGC,EAHDA,MACA8M,EAEC,EAFDA,aACAC,EACC,EADDA,qBAEA,EAAsC3F,mBAAS,EAAE,GAAI,IAArD,mBAAO4F,EAAP,KAAoBC,EAApB,KACA,EAAsD7F,mBAAS,EAAE,GAAI,IAArE,mBAAOsD,EAAP,KAA4BwC,EAA5B,KAEMC,EAAYC,iBAAO,IACnBjD,EAAgBiD,iBAAO,IACvBrM,EAAQqM,kBAAQ,GAChBhC,EAAYgC,iBAAO,GACnB/B,EAAmB+B,iBAAO,GAC1B5B,EAAsB4B,kBAAO,GAC7BC,EAAuBD,kBAAO,GAE9BxJ,EAAiBZ,GAAY,SAACa,GAAD,OAAWA,EAAMD,kBAC9CR,EAAWgK,iBAAO,IAClBE,EAAuBF,iBAAO,MAdnC,SAgBcG,IAhBd,2EAgBD,sBAAAnN,EAAA,yDACE+M,EAAUK,QAAV,aAAwB1J,EAAQC,WAAWxB,cAC3C4H,EAAcqD,QAAU,GACxBzM,EAAMyM,SAAW,EACjBpC,EAAUoC,QAAU,EACpBnC,EAAiBmC,QAAU,EAC3BhC,EAAoBgC,SAAU,EAC9BP,EAAe,EAAE,GAAI,IACrBC,EAAuB,EAAE,GAAI,IAGF,cAAzBH,EAXJ,kCAYcD,EAAaK,EAAUK,QAAShM,EAAStB,EAAWS,GAZlE,6DAacmM,EAAaK,EAAUK,QAASvN,EAAMC,EAAWS,GAb/D,4BAUE2M,EAAqBE,QAVvB,kDAhBC,kEAqDD,kCAAApN,EAAA,sDACMqN,EAAa,CAAEC,MAAM,GAD3B,UAGI,UAACD,SAAD,OAAC,EAAYC,MACQ,UAArBtK,EAASoK,SACRH,EAAqBG,QAL1B,0CAOuBF,EAAqBE,eAP5C,aAOuB,EAA8BG,OAPrD,OAOIF,EAPJ,iCAUMJ,EAAqBG,QAV3B,kDAcOhC,EAAoBgC,SAArB,UAAgCC,SAAhC,OAAgC,EAAYC,OAC9ClC,EAAoBgC,SAAU,EAC9BzM,EAAMyM,SAAW,EACjBP,EAAe,EAAE,GAAI,IACrBC,EAAuB,EAAE,GAAI,IAC7BtJ,KAnBJ,6CArDC,+BA4Ec3D,EA5Ed,gFA4ED,WAAoBI,EAAGE,GAAvB,eAAAH,EAAA,6DACMwN,EAAMT,EAAUK,QAAQnN,GAC5B8M,EAAUK,QAAQnN,GAAK8M,EAAUK,QAAQjN,GACzC4M,EAAUK,QAAQjN,GAAKqN,EACvBX,EAAe,CAAC5M,EAAGE,IAEnBQ,EAAMyM,SAAW,EACjBpC,EAAUoC,SAAW,EAPvB,SAQQnO,EAAMkE,IARd,4CA5EC,+BAuFc/B,EAvFd,gFAuFD,WAAuBwI,EAAQC,GAA/B,SAAA7J,EAAA,yDACM4J,IAAWC,EADjB,uBAEImB,EAAUoC,SAAW,EACrBN,EAAuB,EAAE,GAAI,IAC7BD,EAAe,CAACjD,EAAQC,IAJ5B,SAKU5K,EAAMkE,IALhB,4CAvFC,+BAgGcrD,EAhGd,gFAgGD,WAAyB2N,EAASC,GAAlC,SAAA1N,EAAA,6DACE6M,EAAe,EAAE,GAAI,IACrB5B,EAAiBmC,SAAW,EAC5BzM,EAAMyM,QAAUM,EAChBZ,EAAuBW,GAJzB,SAKQxO,EAAMiE,IALd,4CAhGC,sBAwGD,SAAS3C,IAAsB,IAAD,GAC5B,EAAAwJ,EAAcqD,SAAQlM,KAAtB,mBAzEFuJ,qBAAU,WAYR,OAXAzH,EAASoK,QAAUxK,EAAYe,WAAWX,SAC1CJ,EAAYyG,WACV,SAACxD,GACC7C,EAASoK,QAAUvH,EAEM,UAArB7C,EAASoK,SAtClB,mCAsCuCO,GACT,UAArB3K,EAASoK,SAAqBD,OAEpC,SAAC1J,GAAD,OAAWA,EAAMT,YAGZ,WACLiK,EAAqBG,SAAU,KAEhC,IAEH3C,qBAAU,WACR0C,MACC,CAACvN,IAyDJ,IAAMgO,EACJ,cAACvD,GAAD,CACEzK,MAAOmN,EAAUK,QACjBxD,OAAQgD,EAAY,GACpB/C,YAAa+C,EAAY,GACzBtC,oBAAqBA,EACrBP,cAAeA,EAAcqD,UAG3BS,EACJ,cAAClE,GAAD,CACE/J,MAAOmN,EAAUK,QACjBxD,OAAQgD,EAAY,GACpB/C,YAAa+C,EAAY,GACzBjM,MAAOA,EAAMyM,QACbtD,iBAAkBQ,EAClBP,cAAeA,EAAcqD,UAIjC,OACE,eAACjB,GAAD,WACE,eAACE,GAAD,WACE,iCAASM,IACT,eAACL,GAAD,WACE,yCACA,iCACE,cAACnB,GAAD,CACEC,oBAAqBA,EAAoBgC,kBAKvB,cAAzBT,EAAuCiB,EAAiBC,EACzD,cAAC9C,GAAD,CACEC,UAAWA,EAAUoC,QACrBnC,iBAAkBA,EAAiBmC,gB,gCCvLrCU,GAAWrH,IAAOC,IAAV,4NAcRqH,GAAa,CAAE5I,QAAS,OAAQC,eAAgB,UAEtD,SAAS4I,GAASzE,GAChB,IAAQ2B,EAAqC3B,EAArC2B,SAAUrF,EAA2B0D,EAA3B1D,MAAO3B,EAAoBqF,EAApBrF,MAAU+J,EAAnC,aAA6C1E,EAA7C,IAEA,OACE,6CACE2E,KAAK,WACLC,OAAQtI,IAAU3B,EAClBC,GAAE,mCAA8BD,GAChC,gDAAwCA,IACpC+J,GALN,IAME/I,MAAO,CAAEkJ,SAAU,QANrB,SAQGvI,IAAU3B,GAASgH,KAKnB,SAASmD,KACd,IAAM9K,EAAeX,GAAY,SAACa,GAAD,OAAWA,EAAMF,gBAElD,EAAkCG,GAChC,SAACD,GAAD,MAAW,CAACA,EAAMtB,aAAcsB,EAAMG,aACtCoB,KAFF,mBAAO7C,EAAP,KAAqByB,EAArB,KASA,OAJA6G,qBAAU,WACRlH,MACC,CAACK,IAEwB,IAAxBzB,EAAajC,OAEb,oBAAIgF,MAAO6I,GAAX,iFAMF,sBAAK7I,MAAO6I,GAAZ,UACGvL,EAAkB4D,KAAI,SAACkI,EAAUtK,GAAX,OACrB,cAACgK,GAAD,CAAUnI,MAAOjC,EAAWM,MAAOF,EAAnC,SACE,cAACuI,GAAD,CACE3M,MAAOuC,EACPuK,aAAc4B,EAAS7L,UACvBkK,qBAAsB2B,EAAS3L,QAJU2L,EAAS3L,SAQxD,cAACqL,GAAD,CAAUnI,MAAOjC,EAAWM,MAAO1B,EAAkBtC,OAArD,SACE,cAAC4N,GAAD,UACGtL,EAAkB4D,KAAI,SAACkI,GAAD,OACrB,cAAC/B,GAAD,CACE3M,MAAOuC,EACPuK,aAAc4B,EAAS7L,UACvBkK,qBAAsB2B,EAAS3L,MAC1B2L,EAAS3L,gBCtE5B,IAAMwJ,GAAY1F,IAAOC,IAAV,mIAOA,SAAS6H,KACtB,OACE,eAAC,GAAD,WACE,cAACzJ,EAAD,IACA,cAACiC,GAAD,IACA,cAACsH,GAAD,IACA,cAAC1H,EAAD,OCfN6H,IAASC,OACP,cAAC,IAAMC,WAAP,CAAkB7I,OAAO,EAAzB,SACE,cAAC0I,GAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.c5e98488.chunk.js","sourcesContent":["export function convertInputToArrayString(string) {\n  string = string.replaceAll(/\\s/g, \"\");\n  string = string.replaceAll(/\\d{4}/g, \"\");\n  string = string.replaceAll(/\\s\\s/g, \" \");\n  string = string.replaceAll(/\\s,/g, \",\");\n  string = string.replaceAll(/,,/g, \",\");\n  string = string.replaceAll(/[^0-9,\\s]/g, \"\");\n  return string;\n}\n\nexport function convertArrayStringToArray(string) {\n  return string\n    .split(\",\")\n    .filter((v) => v !== \"\")\n    .map((v) => +v);\n}\n\nexport function getRandomArray(length = generateRandomNumberInRange(5, 30)) {\n  return Array.from(new Array(length), () => generateRandomNumberInRange());\n}\n\nexport function getScreenWidth(){\n  return window.innerWidth;\n}\n\nexport function delay(time) {\n  return new Promise((resolve) => setTimeout(resolve, time));\n}\n\nfunction generateRandomNumberInRange(lowerLimit = 0, upperLimit = 999) {\n  return lowerLimit + Math.floor(Math.random() * upperLimit);\n}","export async function* BubbleSort(array, swap, highlight, marksort) {\n  for (let i = 0; i < array.length; i++) {\n    for (var j = 0; j < array.length - i - 1; j++) {\n      yield await highlight([j, j + 1]);\n\n      if (array[j] > array[j + 1]) {\n        yield await swap(j, j + 1);\n      }\n    }\n\n    marksort(j);\n    yield;\n  }\n}\n","export async function* SelectionSort(array, swap, highlight, marksort) {\n  for (let i = 0; i < array.length; i++) {\n    let maxIndex = 0;\n    for (var j = 0; j < array.length - i; j++) {\n      yield await highlight([maxIndex, j]);\n\n      if (array[maxIndex] < array[j]) {\n        maxIndex = j;\n      }\n    }\n\n    j = j - 1;\n    if (maxIndex !== j && array[maxIndex] !== array[j]) {\n      yield await swap(maxIndex, j);\n    }\n\n    marksort(j);\n    yield;\n  }\n}\n","export async function* InsertionSort(array, swap, highlight, marksort) {\n  for (let i = 0; i < array.length; i++) {\n    let keyIndex = i;\n    for (var j = i - 1; j >= 0; j--) {\n      yield await highlight([keyIndex, j]);\n\n      if (array[j] > array[keyIndex]) {\n        yield await swap(j, keyIndex);\n        keyIndex = j;\n      } else {\n        yield;\n        break;\n      }\n    }\n\n    marksort(i);\n    yield;\n  }\n}\n","export async function* QuickSort(\n  array,\n  swap,\n  highlight,\n  markSort,\n  low = 0,\n  high = array.length - 1\n) {\n\n  if (low <= high) {\n    let pivot = yield* await partition(array, low, high);\n    yield* await QuickSort(array, swap, highlight, markSort, low, pivot - 1);\n    yield* await QuickSort(array, swap, highlight, markSort, pivot + 1, high);\n  }\n\n  async function* partition(array, low, high) {\n    let pivot = low;\n    let i = low;\n    let j = high + 1;\n\n    while (i < j) {\n\n      while (--j > low) {\n        yield await highlight([i, j], pivot);\n        if (array[j] < array[pivot]) {\n          break;\n        }\n      }\n\n      while (i <= high && i < j) {\n        yield await highlight([i], pivot);\n        if (array[++i] > array[pivot]) {\n          break;\n        }\n      }\n\n      if (i < j) {\n        yield await swap(i, j);\n      }\n    }\n\n    if (pivot !== j) {\n      yield await swap(pivot, j);\n    }\n\n    markSort(j);\n    yield;\n    return j;\n  }\n}\n","export async function* HeapSort(array, swap, highlight, markSort) {\n  let arrLength = array.length;\n  for (let i = Math.floor(arrLength / 2) - 1; i >= 0; i--) {\n    yield* await maxHeap(i);\n  }\n\n  for (let i = array.length - 1; i > 0; i--) {\n    arrLength--;\n    markSort(arrLength);\n    yield await swap(0, i);\n    yield* await maxHeap(0);\n  }\n\n  markSort(0);\n\n  async function* maxHeap(i) {\n    const left = 2 * i + 1;\n    const right = 2 * i + 2;\n    let max = i;\n\n    const highlightArray = [];\n    if(left < arrLength)\n      highlightArray.push(left);\n    if(right < arrLength)\n      highlightArray.push(right);\n    yield await highlight(highlightArray, i);\n\n    if(left < arrLength){\n      if (array[left] > array[max]) {\n        max = left;\n      }\n    }\n\n    if(right < arrLength){\n      if (array[right] > array[max]) {\n        max = right;\n      }\n    }\n\n    if (max !== i) {\n      yield await swap(i, max);\n      yield* await maxHeap(max);\n    }\n  }\n}\n","export async function* MergeSort(\n  array,\n  combine,\n  highlight,\n  markSort,\n  offSet = 0,\n  finalMerge = true\n) {\n  if (array.length === 1) {\n    if(finalMerge)\n      markSort(0);\n    return array;\n  }\n\n  const middle = Math.floor(array.length / 2);\n  const left = array.slice(0, middle);\n  const right = array.slice(middle);\n\n  const arr = yield* await merge(\n    yield* await MergeSort(left, combine, highlight, markSort, offSet, false),\n    yield* await MergeSort(right, combine, highlight, markSort, offSet + middle, false),\n    offSet,\n    offSet + middle,\n    finalMerge,\n    markSort\n  );\n  return arr;\n\n  async function* merge(left, right, off1, off2, finalMerge = false, markSort) {\n    let result = [];\n    let leftIndex = 0;\n    let rightIndex = 0;\n\n    while (leftIndex < left.length && rightIndex < right.length) {\n      if (left[leftIndex] <= right[rightIndex]) {\n        yield await highlight([off1 + leftIndex + rightIndex, off2 + rightIndex]);\n        yield await combine(\n          off1 + leftIndex + rightIndex,\n          off1 + result.length,\n        );\n        if(finalMerge)\n          yield await markSort(off1 + result.length);\n        result.push(left[leftIndex]);\n        leftIndex++;\n      } else {\n        yield await highlight([off1 + leftIndex + rightIndex, off2 + rightIndex]);\n        yield await combine(off2 + rightIndex, off1 + result.length);\n        if(finalMerge)\n          yield await markSort(off1 + result.length);\n        result.push(right[rightIndex]);\n        rightIndex++;\n      }\n    }\n\n    while (leftIndex < left.length) {\n      yield await highlight([off1 + leftIndex + rightIndex]);\n      if(finalMerge)\n        yield await markSort(off1 + leftIndex + rightIndex);\n      result.push(left[leftIndex]);\n      leftIndex++;\n    }\n\n    while (rightIndex < right.length) {\n      yield await highlight([off1 + leftIndex + rightIndex]);\n      if(finalMerge)\n        yield await markSort(off1 + leftIndex + rightIndex);\n      result.push(right[rightIndex]);\n      rightIndex++;\n    }\n\n    return result;\n  }\n}\n","import { getScreenWidth } from \"./helper\";\nimport { BubbleSort } from \"../sortFunctions/BubbleSort\";\nimport { SelectionSort } from \"../sortFunctions/SelectionSort\";\nimport { InsertionSort } from \"../sortFunctions/InsertionSort\";\nimport { QuickSort } from \"../sortFunctions/QuickSort\";\nimport { HeapSort } from \"../sortFunctions/HeapSort.js\";\nimport { MergeSort } from \"../sortFunctions/MergeSort\";\n\n// colors setting\nexport const comparisionColor = \"pink\";\nexport const swapColor = \"yellow\";\nexport const sortedColor = \"springgreen\";\nexport const pivotColor = \"sandybrown\";\n\n// time setting\nexport let swapTime = 1000;\nexport let compareTime = 500;\n\n// init array\nexport let sortingArray = initArrayForScreenSize();\n\nexport const sortingAlgorithms = [\n  { component: BubbleSort, title: \"Bubble\", name: \"BubbleSort\" },\n  { component: SelectionSort, title: \"Selection\", name: \"SelectionSort\" },\n  { component: InsertionSort, title: \"Insertion\", name: \"InsertionSort\" },\n  { component: HeapSort, title: \"Heap\", name: \"HeapSort\" },\n  { component: MergeSort, title: \"Merge\", name: \"MergeSort\" },\n  { component: QuickSort, title: \"Quick\", name: \"QuickSort\" },\n];\n\nfunction initArrayForScreenSize() {\n  const screenSize = getScreenWidth();\n  if (screenSize < 460) return [4, 3, 2, 1];\n  else if (screenSize < 720) return [8, 7, 6, 5, 4, 3, 2, 1];\n  return [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1];\n}\n","import create from \"zustand\";\nimport { devtools } from \"zustand/middleware\";\nimport {\n  sortingArray,\n  compareTime,\n  swapTime,\n  sortingAlgorithms,\n} from \"./config\";\n\nexport const useControls = create(\n  devtools((set) => ({\n    progress: \"reset\",\n    speed: 3,\n    compareTime: compareTime,\n    swapTime: swapTime,\n    doneCount: 0,\n\n    startSorting: () => set({ progress: \"start\" }),\n    pauseSorting: () => set({ progress: \"pause\" }),\n    resetSorting: () => set({ progress: \"reset\", doneCount: 0 }),\n    markSortngDone: () =>\n      set((state) => {\n        if (useData.getState().algorithm === sortingAlgorithms.length) {\n          if (state.doneCount === sortingAlgorithms.length - 1)\n            return { doneCount: 0, progress: \"done\" };\n          else return { doneCount: state.doneCount + 1 };\n        } else return { progress: \"done\" };\n      }),\n    setSpeed: (speed) =>\n      set(() => {\n        return { swapTime: 3000 / speed, compareTime: 1500 / speed, speed };\n      }),\n  }))\n);\n\nexport const useData = create(\n  devtools((set) => ({\n    algorithm: 0,\n    sortingArray: sortingArray,\n\n    setSortingArray: (array) => set({ sortingArray: array }),\n    setAlgorithm: (idx) => set({ algorithm: idx }),\n  }))\n);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { sortingAlgorithms } from \"../common/config\";\nimport { useData } from \"../common/store\";\nimport shallow from \"zustand/shallow\";\nimport { AiFillGithub } from \"react-icons/ai\";\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    \"aria-controls\": `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport function NavBar() {\n  const classes = useStyles();\n\n  const [algorithm, setAlgorithm] = useData(\n    (state) => [state.algorithm, state.setAlgorithm],\n    shallow\n  );\n\n  return (\n    <div className={classes.root}>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <h3>Sorting Algorithms Visualizer By Moinuddin Vaidya</h3>\n        <a href=\"https://github.com/moinuddinvaidya786/sort-visualizer\" target=\"_blank\"><AiFillGithub style={{ fontSize: \"1.5rem\" }} /></a>\n      </div>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={algorithm}\n          onChange={(event, id) => setAlgorithm(id)}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs example\"\n        >\n          {sortingAlgorithms.map((algorithm) => (\n            <Tab\n              label={algorithm.title}\n              {...a11yProps(0)}\n              key={algorithm.title}\n            />\n          ))}\n          <Tab label=\"All\" {...a11yProps(6)} />\n        </Tabs>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst FooterDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  bottom: -40px;\n  width: 100%;\n`;\n\nexport function Footer() {\n  return (\n    <FooterDiv>\n      Made with ♥ by&nbsp;<a href=\"https://github.com/moinuddinvaidya786/\">Moinuddin Vaidya</a>\n    </FooterDiv>\n  );\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { VscDebugStart } from \"react-icons/vsc\";\nimport { VscDebugRestart } from \"react-icons/vsc\";\nimport { ImPause } from \"react-icons/im\";\n\nimport Slider from \"@material-ui/core/Slider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { delay } from \"../common/helper\";\n\nimport shallow from \"zustand/shallow\";\nimport { useControls, useData } from \"../common/store\";\nimport {\n  convertInputToArrayString,\n  convertArrayStringToArray,\n  getRandomArray,\n} from \"../common/helper\";\n\nconst ControlBar = styled.div`\n  font-size: 2rem;\n  display: flex;\n  align-items: center;\n  margin: 15px 0;\n  flex-wrap: wrap;\n`;\n\nconst ArrayBar = styled.div`\n  display: flex;\n  align-items: center;\n  flex-basis: 60%;\n  flex-grow: 1;\n  min-width: 300px;\n`;\n\nconst ExecutionBar = styled.div`\n  display: flex;\n  align-items: center;\n  flex-basis: 40%;\n  flex-grow: 1;\n`;\n\nexport function Controller() {\n\n  const [isPausing, setIsPausing] = useState(false);\n\n  const [progress, speed] = useControls(\n    (state) => [state.progress, state.speed],\n    shallow\n  );\n\n  const [sortingArray, setSortingArray] = useData(\n    (state) => [state.sortingArray, state.setSortingArray],\n    shallow\n  );\n\n  const [startSorting, pauseSorting, resetSorting, setSpeed] = useControls(\n    (state) => [\n      state.startSorting,\n      state.pauseSorting,\n      state.resetSorting,\n      state.setSpeed,\n    ],\n    shallow\n  );\n\n  const [arrayInput, setArrayInput] = useState(sortingArray);\n\n  const startElement = <VscDebugStart onClick={startSorting} />;\n  const pauseElement = <ImPause onClick={pauseAndDelaySorting} />;\n  const resetElement = <VscDebugRestart onClick={resetSorting} />;\n  const disabledPauseElement = <ImPause style={{ color: \"#e5e5e5\" }} />;\n\n  async function pauseAndDelaySorting(){\n    pauseSorting();\n    setIsPausing(true);\n    await delay(useControls.getState().swapTime);\n    setIsPausing(false);\n  }\n\n  function arrayDataChangeHandler(value) {\n    const arrayString = convertInputToArrayString(value);\n    setArrayInput(arrayString);\n\n    const array = convertArrayStringToArray(arrayString);\n    setSortingArray(array);\n    resetSorting();\n  }\n\n  function generate() {\n    const randomArray = getRandomArray();\n    setArrayInput(randomArray);\n    setSortingArray(randomArray);\n    resetSorting();\n  }\n\n  function getProgressButton() {\n    if(isPausing)\n      return disabledPauseElement;\n\n    switch (progress) {\n      case \"reset\":\n        return startElement;\n      case \"start\":\n        return pauseElement;\n      case \"pause\":\n        return startElement;\n      case \"done\":\n        return disabledPauseElement;\n    }\n  }\n\n  return (\n    <ControlBar>\n      <ArrayBar>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={generate}\n        >\n          Generate\n        </Button>\n\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Input\"\n          variant=\"outlined\"\n          onChange={(event) => arrayDataChangeHandler(event.target.value)}\n          value={arrayInput}\n          size=\"small\"\n          width=\"100px\"\n          style={{ flexGrow: 1, margin: '0 10px' }}\n        />\n      </ArrayBar>\n      <ExecutionBar>\n        <Slider\n          key={`slider-${speed}`}\n          defaultValue={speed}\n          onChange={(event, value) => setSpeed(value)}\n          aria-labelledby=\"discrete-slider\"\n          valueLabelDisplay=\"auto\"\n          step={1}\n          marks\n          min={1}\n          max={10}\n          style={{ flexGrow: 1, flexBasis: \"100%\" }}\n        />\n\n        <div style={{ display: \"flex\", marginLeft: '20px', columnGap: '5px' }}>\n          {getProgressButton()}\n          {resetElement}\n        </div>\n      </ExecutionBar>\n    </ControlBar>\n  );\n}\n","import styled, { keyframes } from \"styled-components\";\n\nexport const ArrayHolder = styled.div`\n  display: flex;\n  height: 175px;\n  align-items: center;\n  padding: 15px;\n  overflow: auto;\n`;\n\nexport const ArrayItem = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid black;\n  width: 50px;\n  height: 50px;\n  box-shadow: 0 5px 30px 0 rgba(0, 0, 0, 0.15);\n  border-radius: 5px;\n  flex-shrink: 0;\n`;\n\nexport const swapAnimation = (distance, swapColor) => keyframes`\n  0%{\n    background-color: ${swapColor};\n  }\n  10%{\n    transform: translate(0px, 0px);\n    background-color: ${swapColor};\n  }\n  30% {\n    transform: translate(0px, -50px);\n    background-color: ${swapColor};\n  }\n  70% {\n    transform: translate(-${distance * 50}px, -50px);\n    background-color: ${swapColor};\n  }\n  99% {\n    transform: translate(-${distance * 50}px, 0px);\n    background-color: ${swapColor};\n  }\n  100%{\n    transform: translate(-${distance * 50}px, 0px);\n  }\n`;\n\nexport const moveAnimation = () => keyframes`\n  0%{\n    transform: translate(0px, 0px);\n  }\n  100%{\n    transform: translate(50px, 0px);\n  }\n`;\n\nexport const destinationAnimation = (distance, swapColor) => keyframes`\n  0%{\n    background-color: ${swapColor};\n  }\n  40%{\n    transform: translate(0px, 0px);\n    background-color: ${swapColor};\n  }\n  60% {\n    transform: translate(0px, 50px);\n    background-color: ${swapColor};\n  }\n  80% {\n    transform: translate(-${distance * 50}px, 50px);\n    background-color: ${swapColor};\n  }\n  99% {\n    transform: translate(-${distance * 50}px, 0px);\n    background-color: ${swapColor};\n  }\n  100%{\n    transform: translate(-${distance * 50}px, 0px);\n    background-color: none;\n  }\n`;\n\nexport const sourceAnimation = (distance, swapColor) => keyframes`\n  0%{\n    background-color: ${swapColor};\n  }\n  40%{\n    transform: translate(0px, 0px);\n    background-color: ${swapColor};\n  }\n  60% {\n    transform: translate(0px, -50px);\n    background-color: ${swapColor};\n  }\n  80% {\n    transform: translate(${distance * 50}px, -50px);\n    background-color: ${swapColor};\n  }\n  99% {\n    transform: translate(${distance * 50}px, 0px);\n    background-color: ${swapColor};\n  }\n  100%{\n    transform: translate(${distance * 50}px, 0px);\n    background-color: none;\n  }\n`;","import React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  comparisionColor,\n  swapColor,\n  sortedColor,\n  pivotColor,\n} from \"../../common/config\";\nimport { useControls } from \"../../common/store\";\n\nlet swapTime = useControls.getState().swapTime;\nuseControls.subscribe(\n  (time) => (swapTime = time),\n  (state) => state.swapTime\n);\n\nimport {\n  ArrayHolder,\n  ArrayItem,\n  sourceAnimation,\n  destinationAnimation,\n} from \"../../common/styles\";\n\nconst Source = styled(ArrayItem)`\n  animation: ${(props) => destinationAnimation(props.distance, swapColor)}\n    ${() => swapTime / 1000}s forwards;\n`;\n\nconst Destination = styled(ArrayItem)`\n  animation: ${(props) => sourceAnimation(props.distance, swapColor)}\n    ${() => swapTime / 1000}s forwards;\n`;\n\nexport function ArrayContainer({\n  array,\n  source,\n  destination,\n  pivot = -1,\n  highlightIndices,\n  sortedIndices,\n}) {\n\n  function getBackgroundColor(i) {\n    if (i === pivot) {\n      return pivotColor;\n    }\n\n    if (highlightIndices.includes(i)) {\n      return comparisionColor;\n    }\n\n    if (sortedIndices.includes(i)) {\n      return sortedColor;\n    }\n    return \"\";\n  }\n\n  return (\n    <ArrayHolder>\n      {array.map((value, i) => {\n        if (i === source) {\n          return (\n            <Source\n              key={i + \":\" + source + \":\" + destination + \":\" + value}\n              distance={destination - source}\n              style={{\n                order: destination,\n                backgroundColor: getBackgroundColor(i),\n              }}\n            >\n              {value}\n            </Source>\n          );\n        }\n        if (i === destination) {\n          return (\n            <Destination\n              key={i + \":\" + destination + \":\" + source + \":\" + value}\n              distance={destination - source}\n              style={{\n                order: source,\n                backgroundColor: getBackgroundColor(i),\n              }}\n            >\n              {value}\n            </Destination>\n          );\n        }\n        return (\n          <ArrayItem\n            key={i + \":\" + destination + \":\" + source + \":\" + value}\n            style={{\n              order: i,\n              backgroundColor: getBackgroundColor(i),\n            }}\n          >\n            {value}\n          </ArrayItem>\n        );\n      })}\n    </ArrayHolder>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { comparisionColor, swapColor, sortedColor } from \"../../common/config\";\nimport {\n  ArrayHolder,\n  ArrayItem,\n  swapAnimation,\n  moveAnimation,\n} from \"../../common/styles\";\nimport { useControls } from \"../../common/store\";\n\nlet swapTime = useControls.getState().swapTime;\nuseControls.subscribe(\n  (time) => (swapTime = time),\n  (state) => state.swapTime\n);\n\nconst AnimatedItem = styled(ArrayItem)`\n  animation: ${(props) => swapAnimation(props.distance, swapColor)}\n    ${() => swapTime / 1000}s forwards;\n`;\n\nconst MoveItem = styled(ArrayItem)`\n  animation: ${moveAnimation()} ${() => swapTime / 1000}s forwards;\n`;\n\nconst generateItems = (setItems, source, destination) => {\n  setItems((items) => {\n    const newItems = [...items];\n\n    const temp = newItems[source];\n    for (let i = source; i > destination; i--) {\n      newItems[i] = newItems[i - 1];\n    }\n\n    newItems[destination] = temp;\n    return newItems;\n  });\n};\n\nexport function MergeContainer({\n  array,\n  source,\n  destination,\n  hightlightedIndices,\n  sortedIndices,\n}) {\n  const [items, setItems] = useState([...array]);\n\n  useEffect(() => {\n    if (source !== -1 && destination !== -1) {\n      generateItems(setItems, source, destination);\n    }\n  }, [source, destination]);\n\n  useEffect(() => {\n    setItems([...array]);\n  }, [array]);\n\n  function getBackgroundColor(i) {\n    if (sortedIndices.includes(i)) {\n      return sortedColor;\n    }\n\n    if (hightlightedIndices.includes(i)) {\n      return comparisionColor;\n    }\n\n    return \"\";\n  }\n\n  return (\n    <>\n      <ArrayHolder>\n        {items.map((value, i) => {\n          if (i === destination) {\n            return (\n              <AnimatedItem\n                key={i + \":\" + value}\n                style={{\n                  order: source + 1,\n                  backgroundColor: getBackgroundColor(i),\n                }}\n                distance={source - destination}\n              >\n                {value}\n              </AnimatedItem>\n            );\n          } else if (i > destination && i <= source) {\n            return (\n              <MoveItem\n                key={i + \":\" + value}\n                style={{\n                  order: i,\n                  backgroundColor: getBackgroundColor(i),\n                  transform: \"translate(50px)\",\n                }}\n              >\n                {value}\n              </MoveItem>\n            );\n          } else {\n            return (\n              <ArrayItem\n                key={i + \":\" + value}\n                style={{\n                  order: i,\n                  backgroundColor: getBackgroundColor(i),\n                }}\n              >\n                {value}\n              </ArrayItem>\n            );\n          }\n        })}\n      </ArrayHolder>\n    </>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst InfoFlex = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport function InfoFooter({ swapCount, comparisionCount, children }) {\n  return (\n    <InfoFlex>\n      <div>Swaps: <strong>{swapCount}</strong></div>\n      <div>Comparisions: <strong>{comparisionCount}</strong></div>\n    </InfoFlex>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { useControls } from \"../../common/store\";\n\nexport function Timer({ isAlgoExecutionOver }) {\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [milliSeconds, setMilliSeconds] = useState(0);\n\n  const progress = useControls((state) => state.progress);\n\n  function resetTimer() {\n    setMilliSeconds(0);\n    setSeconds(0);\n    setMinutes(0);\n  }\n\n  useEffect(() => {\n    if (isAlgoExecutionOver) return;\n    if (progress === \"start\")\n      var intervalId = setInterval(() => setMilliSeconds((ml) => ml + 1), 100);\n    else if (progress === \"reset\") resetTimer();\n    return () => clearInterval(intervalId);\n  }, [progress, isAlgoExecutionOver]);\n\n  useEffect(() => {\n    if (milliSeconds === 10) {\n      setSeconds((seconds) => seconds + 1);\n      setMilliSeconds(0);\n    }\n  }, [milliSeconds]);\n\n  useEffect(() => {\n    if (seconds === 60) {\n      setMinutes((minutes) => minutes + 1);\n      setSeconds(0);\n    }\n  }, [seconds]);\n\n  return `${minutes.toString().padStart(2, 0)}:${seconds\n    .toString()\n    .padStart(2, 0)}:${milliSeconds} s`;\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { ArrayContainer } from \"./ArrayContainer\";\nimport { MergeContainer } from \"./MergeContainer\";\nimport { InfoFooter } from \"./InfoFooter\";\nimport { Timer } from \"./Timer\";\nimport Card from \"@material-ui/core/Card\";\nimport { delay } from \"../../common/helper\";\nimport shallow from \"zustand/shallow\";\nimport { useControls, useData } from \"../../common/store\";\n\nlet compareTime = useControls.getState().compareTime;\nlet swapTime = useControls.getState().swapTime;\n\nuseControls.subscribe(\n  ([cTime, sTime]) => {\n    compareTime = cTime;\n    swapTime = sTime;\n  },\n  (state) => [state.compareTime, state.swapTime],\n  shallow\n);\n\nconst Container = styled(Card)`\n  padding: 10px;\n  border: 1px solid rgba(0, 0, 0, 0.15);\n`;\n\nconst AlgoHeaderBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  column-gap: 20px;\n`;\n\nconst TimerDiv = styled.div`\n  display: flex;\n  column-gap: 5px;\n  min-width: 8rem;\n  justify-content: flex-end;\n`;\n\nexport const SortManager = React.memo(function ({\n  array,\n  sortFunction,\n  sortingAlgorithmName,\n}) {\n  const [swapIndices, setSwapIndices] = useState([-1, -1]);\n  const [hightlightedIndices, setHightlightedIndices] = useState([-1, -1]);\n\n  const algoArray = useRef([]);\n  const sortedIndices = useRef([]);\n  const pivot = useRef(-1);\n  const swapCount = useRef(0);\n  const comparisionCount = useRef(0);\n  const isAlgoExecutionOver = useRef(false);\n  const isComponentUnMounted = useRef(false);\n\n  const markSortngDone = useControls((state) => state.markSortngDone);\n  const progress = useRef(\"\");\n  const sortProgressIterator = useRef(null);\n\n  async function reset() {\n    algoArray.current = [...useData.getState().sortingArray];\n    sortedIndices.current = [];\n    pivot.current = -1;\n    swapCount.current = 0;\n    comparisionCount.current = 0;\n    isAlgoExecutionOver.current = false;\n    setSwapIndices([-1, -1]);\n    setHightlightedIndices([-1, -1]);\n\n    sortProgressIterator.current =\n      sortingAlgorithmName === \"MergeSort\"\n        ? await sortFunction(algoArray.current, combine, highlight, markSort)\n        : await sortFunction(algoArray.current, swap, highlight, markSort);\n  }\n\n  useEffect(() => {\n    progress.current = useControls.getState().progress;\n    useControls.subscribe(\n      (value) => {\n        progress.current = value;\n        \n        if (progress.current === \"start\") runAlgo();\n        if (progress.current === \"reset\") reset();\n      },\n      (state) => state.progress,\n    );\n\n    return () => {\n      isComponentUnMounted.current = true;\n    };\n  }, []);\n\n  useEffect(() => {\n    reset();\n  }, [array]);\n\n  async function runAlgo() {\n    let completion = { done: false };\n    while (\n      !completion?.done &&\n      progress.current === \"start\" &&\n      !isComponentUnMounted.current\n    ) {\n      completion = await sortProgressIterator.current?.next();\n    }\n\n    if (isComponentUnMounted.current) {\n      return;\n    }\n\n    if (!isAlgoExecutionOver.current && completion?.done) {\n      isAlgoExecutionOver.current = true;\n      pivot.current = -1;\n      setSwapIndices([-1, -1]);\n      setHightlightedIndices([-1, -1]);\n      markSortngDone();\n    }\n  }\n\n  async function swap(i, j) {\n    let tmp = algoArray.current[i];\n    algoArray.current[i] = algoArray.current[j];\n    algoArray.current[j] = tmp;\n    setSwapIndices([i, j]);\n    \n    pivot.current = -1;\n    swapCount.current += 1;\n    await delay(swapTime);\n  }\n\n  async function combine(source, destination) {\n    if (source !== destination) {\n      swapCount.current += 1;\n      setHightlightedIndices([-1, -1]);\n      setSwapIndices([source, destination]);\n      await delay(swapTime);\n    }\n  }\n\n  async function highlight(indices, p) {\n    setSwapIndices([-1, -1]);\n    comparisionCount.current += 1;\n    pivot.current = p;\n    setHightlightedIndices(indices);\n    await delay(compareTime);\n  }\n\n  function markSort(...indices) {\n    sortedIndices.current.push(...indices);\n  }\n\n  const mergeContainer = (\n    <MergeContainer\n      array={algoArray.current}\n      source={swapIndices[0]}\n      destination={swapIndices[1]}\n      hightlightedIndices={hightlightedIndices}\n      sortedIndices={sortedIndices.current}\n    />\n  );\n  const arrayContainer = (\n    <ArrayContainer\n      array={algoArray.current}\n      source={swapIndices[0]}\n      destination={swapIndices[1]}\n      pivot={pivot.current}\n      highlightIndices={hightlightedIndices}\n      sortedIndices={sortedIndices.current}\n    />\n  );\n\n  return (\n    <Container>\n      <AlgoHeaderBar>\n        <strong>{sortingAlgorithmName}</strong>\n        <TimerDiv>\n          <span>Time:</span>\n          <strong>\n            <Timer\n              isAlgoExecutionOver={isAlgoExecutionOver.current}\n            />\n          </strong>\n        </TimerDiv>\n      </AlgoHeaderBar>\n      {sortingAlgorithmName === \"MergeSort\" ? mergeContainer : arrayContainer}\n      <InfoFooter\n        swapCount={swapCount.current}\n        comparisionCount={comparisionCount.current}\n      ></InfoFooter>\n    </Container>\n  );\n});\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { sortingAlgorithms } from \"../common/config\";\nimport { useControls, useData } from \"../common/store\";\nimport shallow from \"zustand/shallow\";\nimport { SortManager } from \"./visualizer/SortManager\";\n\nconst FlexWrap = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  max-width: 100%;\n  column-gap: 10px;\n  row-gap: 10px;\n\n  & > div {\n    max-width: 100%;\n    min-width: 375px;\n  }\n`;\n\nconst flexCenter = { display: \"flex\", justifyContent: \"center\" };\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n      style={{ maxWidth: \"100%\" }}\n    >\n      {value === index && children}\n    </div>\n  );\n}\n\nexport function AlgoDisplay() {\n  const resetSorting = useControls((state) => state.resetSorting);\n\n  const [sortingArray, algorithm] = useData(\n    (state) => [state.sortingArray, state.algorithm],\n    shallow\n  );\n\n  useEffect(() => {\n    resetSorting();\n  }, [algorithm]);\n\n  if (sortingArray.length === 0)\n    return (\n      <h3 style={flexCenter}>\n        Please enter input array or use generate button for random elements\n      </h3>\n    );\n\n  return (\n    <div style={flexCenter}>\n      {sortingAlgorithms.map((algoInfo, idx) => (\n        <TabPanel value={algorithm} index={idx} key={algoInfo.name}>\n          <SortManager\n            array={sortingArray}\n            sortFunction={algoInfo.component}\n            sortingAlgorithmName={algoInfo.name}\n          />\n        </TabPanel>\n      ))}\n      <TabPanel value={algorithm} index={sortingAlgorithms.length}>\n        <FlexWrap>\n          {sortingAlgorithms.map((algoInfo) => (\n            <SortManager\n              array={sortingArray}\n              sortFunction={algoInfo.component}\n              sortingAlgorithmName={algoInfo.name}\n              key={algoInfo.name}\n            />\n          ))}\n        </FlexWrap>\n      </TabPanel>\n    </div>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { NavBar } from \"./components/NavBar\";\nimport { Footer } from \"./components/Footer\";\nimport { Controller } from \"./components/Controller\";\nimport { AlgoDisplay } from \"./components/AlgoDisplay\";\n\nconst Container = styled.div`\n  margin: 0 10px;\n  min-height: calc(100vh - 50px);\n  position: relative;\n  margin-bottom: 50px;\n`;\n\nexport default function App() {\n  return (\n    <Container>\n      <NavBar />\n      <Controller />\n      <AlgoDisplay />\n      <Footer />\n    </Container>\n  );\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode value={false}>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}